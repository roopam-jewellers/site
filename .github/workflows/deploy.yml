name: Deploy to GitHub Pages

on:
  push:
    branches: 
      - main
  workflow_dispatch: # Allow manual trigger

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install dependencies (if needed)
        run: |
          if [ -f package.json ] && [ -f package-lock.json ]; then
            npm ci
          elif [ -f package.json ]; then
            npm install
          else
            echo "No package.json found - skipping dependency installation"
          fi
          
      - name: Inject Firebase Configuration
        run: |
          # Create a more secure Firebase config with domain validation
          cat > assets/js/firebase-env.js << 'EOF'
          // Firebase Environment Configuration - Generated during deployment
          // This configuration includes domain validation and security checks
          (function() {
            'use strict';
            
            // Only set Firebase config if domain is authorized
            const authorizedDomains = ['roopam-jewellery.github.io'];
            const currentDomain = window.location.hostname;
            const isAuthorized = authorizedDomains.some(domain => 
              currentDomain === domain || currentDomain.endsWith('.' + domain)
            );
            
            if (isAuthorized || currentDomain === 'localhost' || currentDomain === '127.0.0.1') {
              // Set configuration only for authorized domains
              window.FIREBASE_API_KEY = '${{ secrets.FIREBASE_API_KEY }}';
              window.FIREBASE_AUTH_DOMAIN = '${{ secrets.FIREBASE_AUTH_DOMAIN }}';
              window.FIREBASE_PROJECT_ID = '${{ secrets.FIREBASE_PROJECT_ID }}';
              window.FIREBASE_STORAGE_BUCKET = '${{ secrets.FIREBASE_STORAGE_BUCKET }}';
              window.FIREBASE_MESSAGING_SENDER_ID = '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}';
              window.FIREBASE_APP_ID = '${{ secrets.FIREBASE_APP_ID }}';
              
              // Add timestamp and validation
              window.FIREBASE_CONFIG_TIMESTAMP = new Date().toISOString();
              console.log('Firebase configuration loaded for authorized domain');
            } else {
              console.warn('Unauthorized domain - Firebase configuration not loaded');
              window.FIREBASE_UNAUTHORIZED = true;
            }
          })();
          EOF
          
      - name: Fix asset paths for GitHub Pages subdirectory
        run: |
          # Update paths in JavaScript files to work with /site/ subdirectory
          sed -i "s|fetch('/config/|fetch('./config/|g" assets/js/config-manager.js
          
          # Update service worker paths
          sed -i "s|'/|'./|g" sw.js
          
          # Update manifest.json paths if they exist
          if [ -f manifest.json ]; then
            sed -i 's|"start_url": "/"|"start_url": "./"|g' manifest.json
            sed -i 's|"scope": "/"|"scope": "./"|g' manifest.json
          fi
          
          echo "Asset paths updated for GitHub Pages subdirectory deployment"
          
      - name: Build site (if needed)
        run: |
          # Add any build steps here if you have a build process
          echo "Static site - Firebase config injected"
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
